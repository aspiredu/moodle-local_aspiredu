name: master branch test

on:
  push

jobs:
  citest:
    name: CI test
    runs-on: 'ubuntu-latest'

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

      mariadb:
        image: mariadb:10.11
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        include:
          - { moodle-branch: 'MOODLE_401_STABLE', php: '8.0', node: '16.14', database: 'mariadb' }
          - { moodle-branch: 'MOODLE_401_STABLE', php: '8.0', node: '16.14', database: 'pgsql' }
          - { moodle-branch: 'MOODLE_403_STABLE', php: '8.0', node: '16.14', database: 'mariadb' }
          - { moodle-branch: 'MOODLE_403_STABLE', php: '8.0', node: '16.14', database: 'pgsql' }
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          # If you are not using code coverage, keep "none". Otherwise, use "pcov" (Moodle 3.10 and up) or "xdebug".
          # If you try to use code coverage with "none", it will fallback to phpdbg (which has known problems).
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci install -vvv --plugin ./plugin --db-host=127.0.0.1 --node-version=${{matrix.node}}
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: Run phplint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: Run codechecker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker

      - name: Run validate
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Run savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Run mustache
        continue-on-error: true # This step will show errors but will not fail. Seems a bit unreliable.
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Run phpunit
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit

      - name: Run behat
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd
